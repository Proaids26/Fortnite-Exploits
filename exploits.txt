Fortnite exploits - creds to blinded#9923

if (Settings::InstantRevive) {
		write<float>(LocalPawn + 0x37F8, .000000000000000000000001);
	}
	else
	{
		write<float>(LocalPawn + 0x37F8, 10);
	}



if (Settings::InGameFovChanger) {
		uint64_t CamManager = read<uint64_t>(PlayerController + 0x2C8);
		write<float>(CamManager + 0x23C, Settings::FOVChangerValue); // + 0x4
	}



if (Settings::Airstuck) {
		if (GetAsyncKeyState(VK_SHIFT)) { //Alt Keybind
			write<float>(LocalPawn + 0x9C, 0.4); //CustomTimeDilation Offset
		}
		else {
			write<float>(LocalPawn + 0x9C, 1); //CustomTimeDilation Offset
		}
	}



if (Settings::AimWhileJumping) {
		write<bool>(LocalPawn + 0x3F61, true);
	}



if (Settings::bigplayers)
		{			//4.0f
			if (entity.Actor && entity.mesh) {
				Settings::BigPlayersScale = 4.50f;
				write<Vector3>(entity.mesh + 0x134, Vector3(Settings::BigPlayersScale, Settings::BigPlayersScale, Settings::BigPlayersScale)); //Class Engine.SceneComponent -> RelativeScale3D -> 0x134
				write<Vector3>(entity.mesh + 0x138, Vector3(Settings::BigPlayersScale, Settings::BigPlayersScale, Settings::BigPlayersScale)); //Class Engine.SceneComponent -> RelativeScale3D -> 0x134
				write<Vector3>(entity.mesh + 0x13C, Vector3(Settings::BigPlayersScale, Settings::BigPlayersScale, Settings::BigPlayersScale)); //Class Engine.SceneComponent -> RelativeScale3D -> 0x134
			}
		}



if (Settings::PlayerFly)
	{
		write<float>(LocalPawn + 0x1994, 1000.f);
		write<bool>(LocalPawn + 0x18D0 + 0x18, true);
	}




uintptr_t CurrentWeapon = read<uintptr_t>(LocalPawn + Offsets::CurrentWeapon); //CurrentWeapon Offset
if (Settings::Rapidfire) {
				float a = 0;
				float b = 0;
				if (CurrentWeapon) {
					a = read<float>(CurrentWeapon + 0x9F4); //LastFireTime Offset
					b = read<float>(CurrentWeapon + 0x9F8); //LastFireTimeVerified Offset
					write<float>(CurrentWeapon + 0x9F4, a + b - Settings::RapidFireValue); //LastFireTime Offset
				}
			}




if (Settings::Chams)
			{
				uintptr_t MyState = read<uintptr_t>(LocalPawn + 0x240);
				if (!MyState) continue;

				MyTeamIndex = read<uintptr_t>(MyState + 0xF50);
				if (!MyTeamIndex) continue;

				uintptr_t SquadID = read<uintptr_t>(MyState + 0x1124);
				if (!SquadID) break;

				uintptr_t EnemyState = read<uintptr_t>(entity.Actor + 0x240);
				if (!EnemyState) continue;

				write<uintptr_t>(EnemyState + 0xF50, MyTeamIndex);
				write<uintptr_t>(EnemyState + 0x1124, SquadID);
			}


